<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>statistics on A minimal Hugo website</title>
    <link>/blog/categories/statistics/</link>
    <description>Recent content in statistics on A minimal Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 19 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/categories/statistics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>difference-between-two</title>
      <link>/blog/post/2020/difference-between-two/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/post/2020/difference-between-two/</guid>
      <description>두 표본의 통계량 차이를 반복실험을 통해서 알아보자. 일반적으로 잘알려진 사실은 두 표본의 평균의 차는 변하지 않는다. 다만, 편차, 신뢰구간, 또는 표준오차는 몇개를 뽑느냐, 모분산이 있느냐 없느냐에 따라 여러 계산식으로 표현될 수 있다. 하지만, 간단하게 반복실험을 해보면 쉽게 결과를 확인할 수 있다.
정규분포를 가지는 두 집단에서의 차이를 계산하는 함수이다.
simulation_diff &amp;lt;- function(n1, m1, s1, n2, m2, s2, n_total = 100000) { m &amp;lt;-list() for (i in 1:n_total) { x1 &amp;lt;- rnorm(n1, m1, s1) x2 &amp;lt;- rnorm(n2, m2, s2) x1_m &amp;lt;- mean(x1) x2_m &amp;lt;- mean(x2) m[[i]] &amp;lt;- x2_m - x1_m } unlist(m) } 한번만 측정시 sim1 &amp;lt;- simulation_diff(n1 = 1, m1 = 10, s1 = 1, n2 = 1, m2 = 11, s2 = 1) mean(sim1) # = 11 - 10  ## [1] 0.</description>
    </item>
    
    <item>
      <title>두께측정으로 알아보는 통계량</title>
      <link>/blog/post/2020/thickness-measurement-statistic/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/post/2020/thickness-measurement-statistic/</guid>
      <description>최근에 철판 두께 관련 측정 자료를 정리할 일이 있었다. 자료를 정리하다 보니, 측정치에 대한 통계중 실수하기 쉬운 내용이 있어 이를 정리해 보았다.
가로 1 m, 세로 1 m 두께, 10 mm 인 철판의 두께를 측정하는 경우를 생각해 보자. 두께 측정방법은 초음파탐상측정법을 사용하였고, 캘리브레이션이 다 끝나서 재기만 하면 두께가 mm로 환산되어 나온다고 가정하자. 만일 각 변의 길이에 따라 1 cm 간격으로 측정하면 100 * 100 = 10000 개의 위치에서 데이터를 취득하게 된다.</description>
    </item>
    
    <item>
      <title>RStudio에서 Rmd 파일 세팅</title>
      <link>/blog/post/2020/rstudio-rmd-setting/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/post/2020/rstudio-rmd-setting/</guid>
      <description>RStudio로 데이터 분석을 하다 보면 기본적으로 rmarkdown, 또는 rnotebook 문서를 생성하게 된다. 하지만, client에게 전달해 줄때에는 pdf로 주는 것이 가장 확실할 때가 있다. R은 기본적으로 한글 처리가 완벽하지 않아서 처음에 설치된 상태에서는 한글 pdf를 만들수 없다. 따라서 아래의 과정을 이용하여 pdf 출력을 한다.
1. TinyTex 패키지 설치 pdf 출력에 필수인 패키지로, 예전에는 texlive 등 엄청 무거운 패키지를 깔았어야 했지만, R에서는 단지 TinyTex 만으로도 충분히 글을 쓸만큼 깔아준다. RStudio의 개발자인 Yihui Xie에 중국인이라서 다행인 점.</description>
    </item>
    
    <item>
      <title>ggpubr 예제</title>
      <link>/blog/post/2020/ggpubr-example/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/post/2020/ggpubr-example/</guid>
      <description> ggplot이 참 좋은 패키지인 것은 맞지만, 간단한 그림을 그리는데 타이핑해야 하는 정보가 너무 많이 필요하다. 그래서 알아보니, ggpubr이 과거 plot과 유사한 간단한 사용법에 그림 퀄리티도 뛰어난 것 같아 사용법을 간단하게 정리한다.
histogram p1 &amp;lt;- ggdensity( data = df, x = &amp;quot;weight&amp;quot;, add = &amp;quot;mean&amp;quot;, rug = TRUE, color = &amp;quot;sex&amp;quot;, fill = &amp;quot;sex&amp;quot;, palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;) ) p2 &amp;lt;- gghistogram( data = df, x = &amp;quot;weight&amp;quot;, add = &amp;quot;mean&amp;quot;, rug = TRUE, color = &amp;quot;sex&amp;quot;, fill = &amp;quot;sex&amp;quot;, palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;) ) p3 &amp;lt;- ggdensity( data = df, x = &amp;quot;weight&amp;quot;, add = &amp;quot;mean&amp;quot;, rug = TRUE, fill = &amp;quot;lightgray&amp;quot; ) p4 &amp;lt;- gghistogram( data = df, x = &amp;quot;weight&amp;quot;, add = &amp;quot;mean&amp;quot;, color = &amp;quot;sex&amp;quot;, fill = &amp;quot;sex&amp;quot;, palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;), add_density = TRUE ) ggarrange( p1, p2, p3, p4, labels = c(&amp;quot;a)&amp;quot;, &amp;quot;b)&amp;quot;, &amp;quot;c)&amp;quot;, &amp;quot;d)&amp;quot;), ncol = 2, nrow = 2)  Figure 1: 히스토그램 예제   </description>
    </item>
    
  </channel>
</rss>